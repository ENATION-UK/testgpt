FROM python:3.11-slim

# 设置代理环境变量
ENV https_proxy=http://192.168.2.210:7012
ENV http_proxy=http://192.168.2.210:7012
ENV all_proxy=socks5://192.168.2.210:7012

# 设置时区
ENV TZ=Asia/Shanghai
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

# 修复软件源和GPG密钥问题 - 使用更彻底的方法
RUN echo 'Acquire::Check-Valid-Until "false";' > /etc/apt/apt.conf.d/99no-check-valid && \
    echo 'APT::Get::AllowUnauthenticated "true";' >> /etc/apt/apt.conf.d/99no-check-valid && \
    echo 'Acquire::AllowInsecureRepositories "true";' >> /etc/apt/apt.conf.d/99no-check-valid && \
    echo 'Acquire::AllowDowngradeToInsecureRepositories "true";' >> /etc/apt/apt.conf.d/99no-check-valid

# 清理并重新配置软件源
RUN rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/* && \
    echo "deb http://deb.debian.org/debian bookworm main" > /etc/apt/sources.list && \
    echo "deb http://deb.debian.org/debian bookworm-updates main" >> /etc/apt/sources.list && \
    echo "deb http://security.debian.org/debian-security bookworm-security main" >> /etc/apt/sources.list

# 分批安装系统依赖以减少磁盘空间使用
RUN apt-get clean && \
    rm -rf /var/cache/apt/archives/* && \
    apt-get update --allow-unauthenticated

# 安装基础工具
RUN apt-get install -y --no-install-recommends --allow-unauthenticated \
        wget \
        gnupg \
        ca-certificates \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* /var/cache/apt/archives/*

# 安装字体包
RUN apt-get update --allow-unauthenticated && \
    apt-get install -y --no-install-recommends --allow-unauthenticated \
        fonts-ipafont-gothic \
        fonts-wqy-zenhei \
        fonts-thai-tlwg \
        fonts-kacst \
        fonts-freefont-ttf \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* /var/cache/apt/archives/*

# 安装X11和图形库
RUN apt-get update --allow-unauthenticated && \
    apt-get install -y --no-install-recommends --allow-unauthenticated \
        libxss1 \
        libglib2.0-0 \
        libnspr4 \
        libnss3 \
        libdbus-1-3 \
        libatk1.0-0 \
        libatspi2.0-0 \
        libxcomposite1 \
        libxdamage1 \
        libxfixes3 \
        libxrandr2 \
        libgbm1 \
        libxkbcommon0 \
        libasound2 \
        xvfb \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* /var/cache/apt/archives/*

# 创建非root用户
RUN groupadd -r playwright && useradd -r -g playwright -G audio,video playwright \
    && mkdir -p /home/playwright/Downloads \
    && mkdir -p /home/playwright/.cache \
    && chown -R playwright:playwright /home/playwright

# 安装Playwright
RUN pip install playwright

# 安装Playwright浏览器（以root用户身份）
RUN playwright install

# 设置Playwright环境变量
ENV PLAYWRIGHT_BROWSERS_PATH=/home/playwright/.cache/ms-playwright
ENV DISPLAY=:99

# 确保浏览器文件权限正确
RUN chown -R playwright:playwright /home/playwright/.cache/ || true

# 验证浏览器安装
RUN ls -la /home/playwright/.cache/ms-playwright/ || echo "Browser directory not found"

# 切换到playwright用户
USER playwright

# 验证浏览器在playwright用户下是否可用
RUN playwright --version

# 设置工作目录
WORKDIR /app

# 复制依赖文件
COPY pyproject.toml uv.lock ./

# 安装Python依赖
RUN pip install --no-cache-dir -e .

# 复制应用代码
COPY . .

# 暴露端口
EXPOSE 8000

# 启动命令 - 使用bash直接执行
CMD ["bash", "-c", "Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 & sleep 2 && python run.py"] 